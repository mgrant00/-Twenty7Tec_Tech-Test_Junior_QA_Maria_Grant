{
	"info": {
		"_postman_id": "d11c857d-3abb-492e-b9ba-924a72fb98a6",
		"name": "Twenty7Tec_Tech-Test_Junior QA_Maria_Grant",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "api.openweathermap.org/data/2.5/weather?id=2643743&appid=9d50450a48809637b4862bdcb125927d&units=metric&lang=en",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response has a JSON body\", function () {\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"pm.test(\"Response has a data property\", function () {\r",
							"    var jsonData = pm.response.json()\r",
							"    ;\r",
							"    pm.expect(jsonData).to.be.a('object');\r",
							"});\r",
							"\r",
							"pm.test(\"ID from params is equal to response ID\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(\"\" + jsonData['id']).equal(pm.request.url.query.get(\"id\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Check input params\", function () {\r",
							"    pm.expect(pm.request.url.query.get(\"units\")).equal(\"metric\");\r",
							"   // check lang param  makes this test no universal, but it should be checked\r",
							"    pm.expect(pm.request.url.query.get(\"lang\")).equal(\"en\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response has a Temp value\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData['main']).to.have.property('temp');\r",
							"});\r",
							"\r",
							"pm.test(\"Response has a Humidity value\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData['main']).to.have.property('humidity');\r",
							"});\r",
							"\r",
							"pm.test(\"Response has a description value\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData['weather'][0]).to.have.property('description');\r",
							"});\r",
							"\r",
							"pm.test(\"Response has a Temp min value\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData['main']).to.have.property('temp_min');\r",
							"});\r",
							"\r",
							"pm.test(\"Response has a Temp max value\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData['main']).to.have.property('temp_max');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "api.openweathermap.org/data/2.5/weather?id=2643743&appid=9d50450a48809637b4862bdcb125927d&units=metric&lang=en",
					"host": [
						"api",
						"openweathermap",
						"org"
					],
					"path": [
						"data",
						"2.5",
						"weather"
					],
					"query": [
						{
							"key": "id",
							"value": "2643743"
						},
						{
							"key": "appid",
							"value": "9d50450a48809637b4862bdcb125927d"
						},
						{
							"key": "units",
							"value": "metric"
						},
						{
							"key": "lang",
							"value": "en"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "api.openweathermap.org/data/2.5/weather?id=2988507&appid=9d50450a48809637b4862bdcb125927d&units=metric&lang=fr",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response has a JSON body\", function () {\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"pm.test(\"Response has a data property\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.be.a('object');\r",
							"});\r",
							"\r",
							"pm.test(\"ID from params is equal to response ID\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(\"\" + jsonData['id']).equal(pm.request.url.query.get(\"id\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Check input params\", function () {\r",
							"    pm.expect(pm.request.url.query.get(\"units\")).equal(\"metric\");\r",
							"   // check lang param  makes this test no universal, but it should be checked\r",
							"    pm.expect(pm.request.url.query.get(\"lang\")).equal(\"fr\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response has a Temp value\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData['main']).to.have.property('temp');\r",
							"});\r",
							"\r",
							"pm.test(\"Response has a Humidity value\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData['main']).to.have.property('humidity');\r",
							"});\r",
							"\r",
							"pm.test(\"Response has a description value\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData['weather'][0]).to.have.property('description');\r",
							"});\r",
							"\r",
							"pm.test(\"Response has a Temp min value\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData['main']).to.have.property('temp_min');\r",
							"});\r",
							"\r",
							"pm.test(\"Response has a Temp max value\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData['main']).to.have.property('temp_max');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "api.openweathermap.org/data/2.5/weather?id=2988507&appid=9d50450a48809637b4862bdcb125927d&units=metric&lang=fr",
					"host": [
						"api",
						"openweathermap",
						"org"
					],
					"path": [
						"data",
						"2.5",
						"weather"
					],
					"query": [
						{
							"key": "id",
							"value": "2988507"
						},
						{
							"key": "appid",
							"value": "9d50450a48809637b4862bdcb125927d"
						},
						{
							"key": "units",
							"value": "metric"
						},
						{
							"key": "lang",
							"value": "fr"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "api.openweathermap.org/data/2.5/weather?id=5128581&appid=9d50450a48809637b4862bdcb125927d&units=metric&lang=en",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response has a JSON body\", function () {\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"pm.test(\"Response has a data property\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.be.a('object');\r",
							"});\r",
							"\r",
							"pm.test(\"ID from params is equal to response ID\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(\"\" + jsonData['id']).equal(pm.request.url.query.get(\"id\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Check input params\", function () {\r",
							"    pm.expect(pm.request.url.query.get(\"units\")).equal(\"metric\");\r",
							"   // check lang param  makes this test no universal, but it should be checked\r",
							"    pm.expect(pm.request.url.query.get(\"lang\")).equal(\"en\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response has a Temp value\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData['main']).to.have.property('temp');\r",
							"});\r",
							"\r",
							"pm.test(\"Response has a Humidity value\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData['main']).to.have.property('humidity');\r",
							"});\r",
							"\r",
							"pm.test(\"Response has a description value\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData['weather'][0]).to.have.property('description');\r",
							"});\r",
							"\r",
							"pm.test(\"Response has a Temp min value\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData['main']).to.have.property('temp_min');\r",
							"});\r",
							"\r",
							"pm.test(\"Response has a Temp max value\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData['main']).to.have.property('temp_max');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "api.openweathermap.org/data/2.5/weather?id=5128581&appid=9d50450a48809637b4862bdcb125927d&units=metric&lang=en",
					"host": [
						"api",
						"openweathermap",
						"org"
					],
					"path": [
						"data",
						"2.5",
						"weather"
					],
					"query": [
						{
							"key": "id",
							"value": "5128581"
						},
						{
							"key": "appid",
							"value": "9d50450a48809637b4862bdcb125927d"
						},
						{
							"key": "units",
							"value": "metric"
						},
						{
							"key": "lang",
							"value": "en"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "api.openweathermap.org/data/2.5/weather?id=2650225&appid=9d50450a48809637b4862bdcb125927d&units=metric&lang=hi",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response has a JSON body\", function () {\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"pm.test(\"Response has a data property\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.be.a('object');\r",
							"});\r",
							"\r",
							"pm.test(\"ID from params is equal to response ID\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(\"\" + jsonData['id']).equal(pm.request.url.query.get(\"id\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Check input params\", function () {\r",
							"    pm.expect(pm.request.url.query.get(\"units\")).equal(\"metric\");\r",
							"   // check lang param  makes this test no universal, but it should be checked\r",
							"    pm.expect(pm.request.url.query.get(\"lang\")).equal(\"hi\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response has a Temp value\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData['main']).to.have.property('temp');\r",
							"});\r",
							"\r",
							"pm.test(\"Response has a Humidity value\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData['main']).to.have.property('humidity');\r",
							"});\r",
							"\r",
							"pm.test(\"Response has a description value\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData['weather'][0]).to.have.property('description');\r",
							"});\r",
							"\r",
							"pm.test(\"Response has a Temp min value\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData['main']).to.have.property('temp_min');\r",
							"});\r",
							"\r",
							"pm.test(\"Response has a Temp max value\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData['main']).to.have.property('temp_max');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "api.openweathermap.org/data/2.5/weather?id=2650225&appid=9d50450a48809637b4862bdcb125927d&units=metric&lang=hi",
					"host": [
						"api",
						"openweathermap",
						"org"
					],
					"path": [
						"data",
						"2.5",
						"weather"
					],
					"query": [
						{
							"key": "id",
							"value": "2650225"
						},
						{
							"key": "appid",
							"value": "9d50450a48809637b4862bdcb125927d"
						},
						{
							"key": "units",
							"value": "metric"
						},
						{
							"key": "lang",
							"value": "hi"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "api.openweathermap.org/data/2.5/weather?id=1850147&appid=9d50450a48809637b4862bdcb125927d&units=metric&lang=ja",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response has a JSON body\", function () {\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"pm.test(\"Response has a data property\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.be.a('object');\r",
							"});\r",
							"\r",
							"pm.test(\"ID from params is equal to response ID\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(\"\" + jsonData['id']).equal(pm.request.url.query.get(\"id\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Check input params\", function () {\r",
							"    pm.expect(pm.request.url.query.get(\"units\")).equal(\"metric\");\r",
							"   // check lang param  makes this test no universal, but it should be checked\r",
							"    pm.expect(pm.request.url.query.get(\"lang\")).equal(\"ja\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response has a Temp value\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData['main']).to.have.property('temp');\r",
							"});\r",
							"\r",
							"pm.test(\"Response has a Humidity value\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData['main']).to.have.property('humidity');\r",
							"});\r",
							"\r",
							"pm.test(\"Response has a description value\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData['weather'][0]).to.have.property('description');\r",
							"});\r",
							"\r",
							"pm.test(\"Response has a Temp min value\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData['main']).to.have.property('temp_min');\r",
							"});\r",
							"\r",
							"pm.test(\"Response has a Temp max value\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData['main']).to.have.property('temp_max');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "api.openweathermap.org/data/2.5/weather?id=1850147&appid=9d50450a48809637b4862bdcb125927d&units=metric&lang=ja",
					"host": [
						"api",
						"openweathermap",
						"org"
					],
					"path": [
						"data",
						"2.5",
						"weather"
					],
					"query": [
						{
							"key": "id",
							"value": "1850147"
						},
						{
							"key": "appid",
							"value": "9d50450a48809637b4862bdcb125927d"
						},
						{
							"key": "units",
							"value": "metric"
						},
						{
							"key": "lang",
							"value": "ja"
						}
					]
				}
			},
			"response": []
		}
	]
}